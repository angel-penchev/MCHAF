name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Output Release URL File
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v2
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: >
              pipenv run pyinstaller --onefile -n mchaf-linux64 main.py
            OUT_FILE_NAME: mchaf-linux64
            ASSET_MIME: application/zip
            SLASH: /
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pipenv run pyinstaller -F -w -n mchaf-macos main.py &&
              cd dist/ &&
              zip -r9 mchaf-macos mchaf-macos.app/
            OUT_FILE_NAME: mchaf-macos.zip
            ASSET_MIME: application/zip
            SLASH: /
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pipenv run pyinstaller --onefile -n mchaf-win64 main.py
            OUT_FILE_NAME: mchaf-win64.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
            SLASH: \
    steps:
      - name: Checkout with GitHub
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install pipenv and pyinstaller
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Install dependencies
        run: |
          pipenv install --dev

      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Load Release URL File from release job
        id: download_release_info
        uses: actions/download-artifact@v2
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat "${{steps.download_release_info.outputs.download-path}}${{matrix.SLASH}}release_url.txt"`
          echo ::set-output name=upload_url::$value

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}
